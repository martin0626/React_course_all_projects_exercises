{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Course\\\\ReactProjects\\\\React_course_all_projects_exercises\\\\User-Auth\\\\frontend\\\\src\\\\pages\\\\Authentication.js\";\nimport { json } from \"react-router-dom\";\nimport AuthForm from \"../components/AuthForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action(_ref) {\n  let {\n    request\n  } = _ref;\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams().get(\"mode\") || \"login\";\n  let data = await request.formData();\n  let userData = {\n    email: data.get(\"email\"),\n    password: data.get(\"password\")\n  };\n  if (request.status === 422 || request.status === 401) {\n    return response;\n  }\n  const response = await fetch(\"http://localhost:8080/\" + mode, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(userData)\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["json","AuthForm","AuthenticationPage","action","request","searchParams","URL","url","mode","get","data","formData","userData","email","password","status","response","fetch","method","headers","body","JSON","stringify"],"sources":["D:/React_Course/ReactProjects/React_course_all_projects_exercises/User-Auth/frontend/src/pages/Authentication.js"],"sourcesContent":["import { json } from \"react-router-dom\";\nimport AuthForm from \"../components/AuthForm\";\n\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\nexport async function action({ request }) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams().get(\"mode\") || \"login\";\n\n  let data = await request.formData();\n  let userData = {\n    email: data.get(\"email\"),\n    password: data.get(\"password\"),\n  };\n\n  if (request.status === 422 || request.status === 401) {\n    return response;\n  }\n\n  const response = await fetch(\"http://localhost:8080/\" + mode, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(userData),\n  });\n}\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,QAAQ,MAAM,wBAAwB;AAAC;AAE9C,SAASC,kBAAkB,GAAG;EAC5B,oBAAO,QAAC,QAAQ;IAAA;IAAA;IAAA;EAAA,QAAG;AACrB;AAAC,KAFQA,kBAAkB;AAI3B,eAAeA,kBAAkB;AAEjC,OAAO,eAAeC,MAAM,OAAc;EAAA,IAAb;IAAEC;EAAQ,CAAC;EACtC,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY;EACtD,MAAMG,IAAI,GAAGH,YAAY,EAAE,CAACI,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAElD,IAAIC,IAAI,GAAG,MAAMN,OAAO,CAACO,QAAQ,EAAE;EACnC,IAAIC,QAAQ,GAAG;IACbC,KAAK,EAAEH,IAAI,CAACD,GAAG,CAAC,OAAO,CAAC;IACxBK,QAAQ,EAAEJ,IAAI,CAACD,GAAG,CAAC,UAAU;EAC/B,CAAC;EAED,IAAIL,OAAO,CAACW,MAAM,KAAK,GAAG,IAAIX,OAAO,CAACW,MAAM,KAAK,GAAG,EAAE;IACpD,OAAOC,QAAQ;EACjB;EAEA,MAAMA,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,GAAGT,IAAI,EAAE;IAC5DU,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,QAAQ;EAC/B,CAAC,CAAC;AACJ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}