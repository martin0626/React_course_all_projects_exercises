{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Course\\\\ReactProjects\\\\React_course_all_projects_exercises\\\\Http-Requests-Example\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [movies, setMovies] = useState([]);\n  let [isLoading, setLoading] = useState(false);\n  let [error, setError] = useState(null);\n  async function requestHanler() {\n    setLoading(true);\n    try {\n      let response = await fetch(\"https://swapi.dev/api/films/\");\n      let data = await response.json();\n      let newMovies = data.results.map(film => {\n        return {\n          id: film.episode_id,\n          title: film.title,\n          releaseDate: film.release_date,\n          openingText: film.opening_crawl\n        };\n      });\n      setMovies(newMovies);\n    } catch {}\n    setLoading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: requestHanler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && movies.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No results!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 47\n      }, this), !isLoading && movies.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 45\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"H4bV4obyjEPDyozfo7XkyLSmWGs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","App","movies","setMovies","isLoading","setLoading","error","setError","requestHanler","response","fetch","data","json","newMovies","results","map","film","id","episode_id","title","releaseDate","release_date","openingText","opening_crawl","length"],"sources":["D:/React_Course/ReactProjects/React_course_all_projects_exercises/Http-Requests-Example/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  let [movies, setMovies] = useState([]);\n  let [isLoading, setLoading] = useState(false);\n  let [error, setError] = useState(null);\n\n  async function requestHanler() {\n    setLoading(true);\n    try {\n      let response = await fetch(\"https://swapi.dev/api/films/\");\n      let data = await response.json();\n      let newMovies = data.results.map((film) => {\n        return {\n          id: film.episode_id,\n          title: film.title,\n          releaseDate: film.release_date,\n          openingText: film.opening_crawl,\n        };\n      });\n      setMovies(newMovies);\n    } catch {}\n    setLoading(false);\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={requestHanler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length === 0 && <p>No results!</p>}\n        {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        {isLoading && <p>Loading...</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EACb,IAAI,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,IAAI,CAACK,SAAS,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC7C,IAAI,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtC,eAAeS,aAAa,GAAG;IAC7BH,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,IAAII,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;MAC1D,IAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAChC,IAAIC,SAAS,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,IAAI,IAAK;QACzC,OAAO;UACLC,EAAE,EAAED,IAAI,CAACE,UAAU;UACnBC,KAAK,EAAEH,IAAI,CAACG,KAAK;UACjBC,WAAW,EAAEJ,IAAI,CAACK,YAAY;UAC9BC,WAAW,EAAEN,IAAI,CAACO;QACpB,CAAC;MACH,CAAC,CAAC;MACFpB,SAAS,CAACU,SAAS,CAAC;IACtB,CAAC,CAAC,MAAM,CAAC;IACTR,UAAU,CAAC,KAAK,CAAC;EACnB;EAEA,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACb;MAAA,uBACE;QAAQ,OAAO,EAAEG,aAAc;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAsB;MAAA;MAAA;MAAA;IAAA,QAC7C,eACV;MAAA,WACG,CAACJ,SAAS,IAAIF,MAAM,CAACsB,MAAM,KAAK,CAAC,iBAAI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,EACvD,CAACpB,SAAS,IAAIF,MAAM,CAACsB,MAAM,GAAG,CAAC,iBAAI,QAAC,UAAU;QAAC,MAAM,EAAEtB;MAAO;QAAA;QAAA;QAAA;MAAA,QAAG,EACjEE,SAAS,iBAAI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB;IAAA;MAAA;MAAA;MAAA;IAAA,QACvB;EAAA;IAAA;IAAA;IAAA;EAAA,QACK;AAErB;AAAC,GAnCQH,GAAG;AAAA,KAAHA,GAAG;AAqCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}