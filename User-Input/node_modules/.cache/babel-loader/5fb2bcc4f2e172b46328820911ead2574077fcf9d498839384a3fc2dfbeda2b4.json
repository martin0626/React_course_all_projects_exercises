{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Course\\\\ReactProjects\\\\React_course_all_projects_exercises\\\\User-Input\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  let [nameInput, setNameInput] = useState(\"\");\n  let [touchedName, setTouchedName] = useState(false);\n  let [emailInput, setEmailInput] = useState(\"\");\n  let [touchedEmail, setTouchedEmail] = useState(false);\n  let touchedInput = !touchedEmail && !touchedName;\n  let enteredNameisValid = nameInput.trim() !== \"\";\n  let isNotValidName = !enteredNameisValid && touchedName;\n  let enteredEmailIsValid = emailInput.trim().includes(\"@\");\n  let isNotValidEmail = !enteredEmailIsValid && touchedEmail;\n  let formisValid = false;\n  if ((!isNotValidName && !isNotValidEmail) | touchedInput) {\n    formisValid = true;\n  }\n  const blurEmailHandler = () => {\n    setTouchedEmail(true);\n  };\n  const emailChangeHandler = event => {\n    setEmailInput(event.target.value);\n    setTouchedEmail(true);\n  };\n  const blurHandler = () => {\n    setTouchedName(true);\n  };\n  const nameChangeHandler = event => {\n    setNameInput(event.target.value);\n    setTouchedName(true);\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    setTouchedName(true);\n    setTouchedEmail(true);\n  };\n  let inputNameFieldClasses = isNotValidName ? \"invalid form-control\" : \"form-control\";\n  let inputEmailFieldClasses = isNotValidEmail ? \"invalid form-control\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputNameFieldClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onBlur: blurHandler,\n        onChange: nameChangeHandler,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), isNotValidName && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Invalid Name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputEmailFieldClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onBlur: blurEmailHandler,\n        onChange: emailChangeHandler,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), !isValidEmail && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Invalid Email!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: !formisValid ? /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        className: \"disabled\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"pw0+4XVI4XdVA+kBrgvppDt80zw=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","SimpleInput","props","nameInput","setNameInput","touchedName","setTouchedName","emailInput","setEmailInput","touchedEmail","setTouchedEmail","touchedInput","enteredNameisValid","trim","isNotValidName","enteredEmailIsValid","includes","isNotValidEmail","formisValid","blurEmailHandler","emailChangeHandler","event","target","value","blurHandler","nameChangeHandler","submitHandler","preventDefault","inputNameFieldClasses","inputEmailFieldClasses","isValidEmail"],"sources":["D:/React_Course/ReactProjects/React_course_all_projects_exercises/User-Input/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  let [nameInput, setNameInput] = useState(\"\");\n  let [touchedName, setTouchedName] = useState(false);\n  let [emailInput, setEmailInput] = useState(\"\");\n  let [touchedEmail, setTouchedEmail] = useState(false);\n\n  let touchedInput = !touchedEmail && !touchedName;\n\n  let enteredNameisValid = nameInput.trim() !== \"\";\n  let isNotValidName = !enteredNameisValid && touchedName;\n\n  let enteredEmailIsValid = emailInput.trim().includes(\"@\");\n  let isNotValidEmail = !enteredEmailIsValid && touchedEmail;\n  let formisValid = false;\n\n  if ((!isNotValidName && !isNotValidEmail) | touchedInput) {\n    formisValid = true;\n  }\n\n  const blurEmailHandler = () => {\n    setTouchedEmail(true);\n  };\n\n  const emailChangeHandler = (event) => {\n    setEmailInput(event.target.value);\n    setTouchedEmail(true);\n  };\n\n  const blurHandler = () => {\n    setTouchedName(true);\n  };\n\n  const nameChangeHandler = (event) => {\n    setNameInput(event.target.value);\n    setTouchedName(true);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    setTouchedName(true);\n    setTouchedEmail(true);\n  };\n\n  let inputNameFieldClasses = isNotValidName\n    ? \"invalid form-control\"\n    : \"form-control\";\n  let inputEmailFieldClasses = isNotValidEmail\n    ? \"invalid form-control\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={inputNameFieldClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          onBlur={blurHandler}\n          onChange={nameChangeHandler}\n          type=\"text\"\n          id=\"name\"\n        />\n        {isNotValidName && <p className=\"error-text\">Invalid Name!</p>}\n      </div>\n      <div className={inputEmailFieldClasses}>\n        <label htmlFor=\"name\">Email</label>\n        <input\n          onBlur={blurEmailHandler}\n          onChange={emailChangeHandler}\n          type=\"text\"\n          id=\"name\"\n        />\n        {!isValidEmail && <p className=\"error-text\">Invalid Email!</p>}\n      </div>\n      <div className=\"form-actions\">\n        {!formisValid ? (\n          <button disabled={true} className=\"disabled\">\n            Submit\n          </button>\n        ) : (\n          <button>Submit</button>\n        )}\n      </div>\n      {/* {!notErrorMessage && <p className=\"error-text\">Error!</p>} */}\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}