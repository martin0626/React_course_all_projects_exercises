{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Course\\\\ReactProjects\\\\React_course_all_projects_exercises\\\\User-Input\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  let {\n    enteredValue: nameInput,\n    isTouched: touchedName,\n    setIsTouched: setTouchedName,\n    valueIsValid: enteredNameIsValid,\n    hasError: isNotValidName,\n    changeHandler: nameChangeHandler,\n    blurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== \"\");\n  let {\n    enteredValue: emailInput,\n    isTouched: touchedEmail,\n    setIsTouched: setTouchedEmail,\n    valueIsValid: enteredEmailIsValid,\n    hasError: isNotValidEmail,\n    changeHandler: emailChangeHandler,\n    blurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.trim().includes(\"@\"));\n  let touchedInput = !touchedEmail && !touchedName;\n  let formisValid = false;\n  if ((!isNotValidName && !isNotValidEmail) | touchedInput) {\n    formisValid = true;\n  }\n  const submitHandler = event => {\n    event.preventDefault();\n    if (!enteredEmailIsValid | !enteredNameIsValid) {\n      setTouchedName(true);\n      setTouchedEmail(true);\n      return;\n    }\n    resetEmailInput();\n    resetNameInput();\n  };\n  let inputNameFieldClasses = isNotValidName ? \"invalid form-control\" : \"form-control\";\n  let inputEmailFieldClasses = isNotValidEmail ? \"invalid form-control\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputNameFieldClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onBlur: nameBlurHandler,\n        onChange: nameChangeHandler,\n        type: \"text\",\n        id: \"name\",\n        value: nameInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), isNotValidName && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Invalid Name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputEmailFieldClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onBlur: emailBlurHandler,\n        onChange: emailChangeHandler,\n        type: \"text\",\n        id: \"name\",\n        value: emailInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), isNotValidEmail && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Invalid Email!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: !formisValid ? /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        className: \"disabled\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"IuCX+FDXEUu7hpQ/F8dkQBRoLdY=\", false, function () {\n  return [useInput, useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useInput","SimpleInput","props","enteredValue","nameInput","isTouched","touchedName","setIsTouched","setTouchedName","valueIsValid","enteredNameIsValid","hasError","isNotValidName","changeHandler","nameChangeHandler","blurHandler","nameBlurHandler","reset","resetNameInput","value","trim","emailInput","touchedEmail","setTouchedEmail","enteredEmailIsValid","isNotValidEmail","emailChangeHandler","emailBlurHandler","resetEmailInput","includes","touchedInput","formisValid","submitHandler","event","preventDefault","inputNameFieldClasses","inputEmailFieldClasses"],"sources":["D:/React_Course/ReactProjects/React_course_all_projects_exercises/User-Input/src/components/SimpleInput.js"],"sourcesContent":["import useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  let {\n    enteredValue: nameInput,\n    isTouched: touchedName,\n    setIsTouched: setTouchedName,\n    valueIsValid: enteredNameIsValid,\n    hasError: isNotValidName,\n    changeHandler: nameChangeHandler,\n    blurHandler: nameBlurHandler,\n    reset: resetNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  let {\n    enteredValue: emailInput,\n    isTouched: touchedEmail,\n    setIsTouched: setTouchedEmail,\n    valueIsValid: enteredEmailIsValid,\n    hasError: isNotValidEmail,\n    changeHandler: emailChangeHandler,\n    blurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = useInput((value) => value.trim().includes(\"@\"));\n\n  let touchedInput = !touchedEmail && !touchedName;\n\n  let formisValid = false;\n\n  if ((!isNotValidName && !isNotValidEmail) | touchedInput) {\n    formisValid = true;\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    if (!enteredEmailIsValid | !enteredNameIsValid) {\n      setTouchedName(true);\n      setTouchedEmail(true);\n      return;\n    }\n\n    resetEmailInput();\n    resetNameInput();\n  };\n\n  let inputNameFieldClasses = isNotValidName\n    ? \"invalid form-control\"\n    : \"form-control\";\n  let inputEmailFieldClasses = isNotValidEmail\n    ? \"invalid form-control\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={inputNameFieldClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          onBlur={nameBlurHandler}\n          onChange={nameChangeHandler}\n          type=\"text\"\n          id=\"name\"\n          value={nameInput}\n        />\n        {isNotValidName && <p className=\"error-text\">Invalid Name!</p>}\n      </div>\n      <div className={inputEmailFieldClasses}>\n        <label htmlFor=\"name\">Email</label>\n        <input\n          onBlur={emailBlurHandler}\n          onChange={emailChangeHandler}\n          type=\"text\"\n          id=\"name\"\n          value={emailInput}\n        />\n        {isNotValidEmail && <p className=\"error-text\">Invalid Email!</p>}\n      </div>\n      <div className=\"form-actions\">\n        {!formisValid ? (\n          <button disabled={true} className=\"disabled\">\n            Submit\n          </button>\n        ) : (\n          <button>Submit</button>\n        )}\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}