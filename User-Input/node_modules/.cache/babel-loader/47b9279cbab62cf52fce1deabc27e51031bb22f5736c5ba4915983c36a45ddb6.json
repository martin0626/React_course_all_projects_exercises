{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Course\\\\ReactProjects\\\\React_course_all_projects_exercises\\\\User-Input\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  let [nameInput, setNameInput] = useState(\"\");\n  let [touchedName, setTouchedName] = useState(false);\n  let enteredNameIsValid = nameInput.trim() === \"\";\n  let isValid = enteredNameIsValid && touchedName;\n  const blurHandler = () => {\n    setTouchedName(true);\n  };\n  const nameChangeHandler = event => {\n    setNameInput(event.target.value);\n    setTouchedName(true);\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    setTouchedName(true);\n  };\n  let inputFieldClasses = isValid ? \"invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputFieldClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onBlur: blurHandler,\n        onChange: nameChangeHandler,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Error!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"nKoD3jsxyABfbhd89wZ7UZVxbXw=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","SimpleInput","props","nameInput","setNameInput","touchedName","setTouchedName","enteredNameIsValid","trim","isValid","blurHandler","nameChangeHandler","event","target","value","submitHandler","preventDefault","inputFieldClasses"],"sources":["D:/React_Course/ReactProjects/React_course_all_projects_exercises/User-Input/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  let [nameInput, setNameInput] = useState(\"\");\n  let [touchedName, setTouchedName] = useState(false);\n\n  let enteredNameIsValid = nameInput.trim() === \"\";\n  let isValid = enteredNameIsValid && touchedName;\n\n  const blurHandler = () => {\n    setTouchedName(true);\n  };\n\n  const nameChangeHandler = (event) => {\n    setNameInput(event.target.value);\n    setTouchedName(true);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    setTouchedName(true);\n  };\n\n  let inputFieldClasses = isValid ? \"invalid\" : \"form-control\";\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={inputFieldClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          onBlur={blurHandler}\n          onChange={nameChangeHandler}\n          type=\"text\"\n          id=\"name\"\n        />\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n      {isValid && <p className=\"error-text\">Error!</p>}\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAEjC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAC7B,IAAI,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC5C,IAAI,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEnD,IAAIO,kBAAkB,GAAGJ,SAAS,CAACK,IAAI,EAAE,KAAK,EAAE;EAChD,IAAIC,OAAO,GAAGF,kBAAkB,IAAIF,WAAW;EAE/C,MAAMK,WAAW,GAAG,MAAM;IACxBJ,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMK,iBAAiB,GAAIC,KAAK,IAAK;IACnCR,YAAY,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAChCR,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMS,aAAa,GAAIH,KAAK,IAAK;IAC/BA,KAAK,CAACI,cAAc,EAAE;IAEtBV,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,IAAIW,iBAAiB,GAAGR,OAAO,GAAG,SAAS,GAAG,cAAc;EAE5D,oBACE;IAAM,QAAQ,EAAEM,aAAc;IAAA,wBAC5B;MAAK,SAAS,EAAEE,iBAAkB;MAAA,wBAChC;QAAO,OAAO,EAAC,MAAM;QAAA,UAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAQ,eACvC;QACE,MAAM,EAAEP,WAAY;QACpB,QAAQ,EAAEC,iBAAkB;QAC5B,IAAI,EAAC,MAAM;QACX,EAAE,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QACT;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAK,SAAS,EAAC,cAAc;MAAA,uBAC3B;QAAA,UAAQ;MAAM;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QACnB,EACLF,OAAO,iBAAI;MAAG,SAAS,EAAC,YAAY;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QAC3C;AAEX,CAAC;AAAC,GAzCIR,WAAW;AAAA,KAAXA,WAAW;AA2CjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}