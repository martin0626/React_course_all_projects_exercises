{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Course\\\\ReactProjects\\\\React_course_all_projects_exercises\\\\User-Input\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  let {\n    enteredValue: nameInput,\n    isTouched: touchedName,\n    valueIsValid: enteredNameisValid,\n    hasError: isNotValidName,\n    changeHandler: nameChangeHandler,\n    blurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== \"\");\n  // let [nameInput, setNameInput] = useState(\"\");\n  // let [touchedName, setTouchedName] = useState(false);\n  let [emailInput, setEmailInput] = useState(\"\");\n  let [touchedEmail, setTouchedEmail] = useState(false);\n  let touchedInput = !touchedEmail && !touchedName;\n\n  // let enteredNameisValid = nameInput.trim() !== \"\";\n  // let isNotValidName = !enteredNameisValid && touchedName;\n\n  let enteredEmailIsValid = emailInput.trim().includes(\"@\");\n  let isNotValidEmail = !enteredEmailIsValid && touchedEmail;\n  let formisValid = false;\n  if ((!isNotValidName && !isNotValidEmail) | touchedInput) {\n    formisValid = true;\n  }\n  const blurEmailHandler = () => {\n    setTouchedEmail(true);\n  };\n  const emailChangeHandler = event => {\n    setEmailInput(event.target.value);\n    setTouchedEmail(true);\n  };\n\n  // const blurHandler = () => {\n  //   setTouchedName(true);\n  // };\n\n  // const nameChangeHandler = (event) => {\n  //   setNameInput(event.target.value);\n  //   setTouchedName(true);\n  // };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    if (!enteredEmailIsValid | !enteredNameisValid) {\n      return;\n    }\n    setTouchedEmail(false);\n    // setTouchedName(false);\n\n    setEmailInput(\"\");\n    // setNameInput(\"\");\n\n    resetNameInput();\n  };\n  let inputNameFieldClasses = isNotValidName ? \"invalid form-control\" : \"form-control\";\n  let inputEmailFieldClasses = isNotValidEmail ? \"invalid form-control\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputNameFieldClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onBlur: nameBlurHandler,\n        onChange: nameChangeHandler,\n        type: \"text\",\n        id: \"name\",\n        value: nameInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), isNotValidName && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Invalid Name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputEmailFieldClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onBlur: blurEmailHandler,\n        onChange: emailChangeHandler,\n        type: \"text\",\n        id: \"name\",\n        value: emailInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), isNotValidEmail && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Invalid Email!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: !formisValid ? /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        className: \"disabled\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"Sio18W6EmESGUtzzmKDdf6KC+D0=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","SimpleInput","props","enteredValue","nameInput","isTouched","touchedName","valueIsValid","enteredNameisValid","hasError","isNotValidName","changeHandler","nameChangeHandler","blurHandler","nameBlurHandler","reset","resetNameInput","value","trim","emailInput","setEmailInput","touchedEmail","setTouchedEmail","touchedInput","enteredEmailIsValid","includes","isNotValidEmail","formisValid","blurEmailHandler","emailChangeHandler","event","target","submitHandler","preventDefault","inputNameFieldClasses","inputEmailFieldClasses"],"sources":["D:/React_Course/ReactProjects/React_course_all_projects_exercises/User-Input/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  let {\n    enteredValue: nameInput,\n    isTouched: touchedName,\n    valueIsValid: enteredNameisValid,\n    hasError: isNotValidName,\n    changeHandler: nameChangeHandler,\n    blurHandler: nameBlurHandler,\n    reset: resetNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n  // let [nameInput, setNameInput] = useState(\"\");\n  // let [touchedName, setTouchedName] = useState(false);\n  let [emailInput, setEmailInput] = useState(\"\");\n  let [touchedEmail, setTouchedEmail] = useState(false);\n\n  let touchedInput = !touchedEmail && !touchedName;\n\n  // let enteredNameisValid = nameInput.trim() !== \"\";\n  // let isNotValidName = !enteredNameisValid && touchedName;\n\n  let enteredEmailIsValid = emailInput.trim().includes(\"@\");\n  let isNotValidEmail = !enteredEmailIsValid && touchedEmail;\n  let formisValid = false;\n\n  if ((!isNotValidName && !isNotValidEmail) | touchedInput) {\n    formisValid = true;\n  }\n\n  const blurEmailHandler = () => {\n    setTouchedEmail(true);\n  };\n\n  const emailChangeHandler = (event) => {\n    setEmailInput(event.target.value);\n    setTouchedEmail(true);\n  };\n\n  // const blurHandler = () => {\n  //   setTouchedName(true);\n  // };\n\n  // const nameChangeHandler = (event) => {\n  //   setNameInput(event.target.value);\n  //   setTouchedName(true);\n  // };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    if (!enteredEmailIsValid | !enteredNameisValid) {\n      return;\n    }\n\n    setTouchedEmail(false);\n    // setTouchedName(false);\n\n    setEmailInput(\"\");\n    // setNameInput(\"\");\n\n    resetNameInput();\n  };\n\n  let inputNameFieldClasses = isNotValidName\n    ? \"invalid form-control\"\n    : \"form-control\";\n  let inputEmailFieldClasses = isNotValidEmail\n    ? \"invalid form-control\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={inputNameFieldClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          onBlur={nameBlurHandler}\n          onChange={nameChangeHandler}\n          type=\"text\"\n          id=\"name\"\n          value={nameInput}\n        />\n        {isNotValidName && <p className=\"error-text\">Invalid Name!</p>}\n      </div>\n      <div className={inputEmailFieldClasses}>\n        <label htmlFor=\"name\">Email</label>\n        <input\n          onBlur={blurEmailHandler}\n          onChange={emailChangeHandler}\n          type=\"text\"\n          id=\"name\"\n          value={emailInput}\n        />\n        {isNotValidEmail && <p className=\"error-text\">Invalid Email!</p>}\n      </div>\n      <div className=\"form-actions\">\n        {!formisValid ? (\n          <button disabled={true} className=\"disabled\">\n            Submit\n          </button>\n        ) : (\n          <button>Submit</button>\n        )}\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}