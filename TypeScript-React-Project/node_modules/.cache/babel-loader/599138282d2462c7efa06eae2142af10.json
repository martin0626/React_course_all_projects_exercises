{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Course\\\\ReactProjects\\\\React_course_all_projects_exercises\\\\TypeScript-React-Project\\\\src\\\\App.tsx\";\nimport NewTodo from \"./components/NewTodo\";\nimport Todo from \"./components/Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // let todos = [new TodoClass(\"First Element\"), new TodoClass(\"Second Element\")];\n  // const [todos, setTodo] = useState<TodoClass[]>([]);\n  // const onAddTodo = (todo: string) => {\n  //   let newTodo = new TodoClass(todo);\n  //   setTodo((prevTodosState) => {\n  //     return prevTodosState?.concat(newTodo);\n  //   });\n  // };\n  // const removeTodoHandler = (todoText: string) => {\n  //   setTodo((prevTodosState) => {\n  //     return prevTodosState.filter((todo) => todo.text !== todoText);\n  //   });\n  // };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewTodo, {\n      onAddTodo: onAddTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      removeTodoHandler: removeTodoHandler,\n      todos: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["NewTodo","Todo","App","onAddTodo","removeTodoHandler","todos"],"sources":["D:/React_Course/ReactProjects/React_course_all_projects_exercises/TypeScript-React-Project/src/App.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport NewTodo from \"./components/NewTodo\";\nimport Todo from \"./components/Todo\";\nimport TodoClass from \"./models/todo\";\n\nfunction App() {\n  // let todos = [new TodoClass(\"First Element\"), new TodoClass(\"Second Element\")];\n  // const [todos, setTodo] = useState<TodoClass[]>([]);\n\n  // const onAddTodo = (todo: string) => {\n  //   let newTodo = new TodoClass(todo);\n  //   setTodo((prevTodosState) => {\n  //     return prevTodosState?.concat(newTodo);\n  //   });\n  // };\n\n  // const removeTodoHandler = (todoText: string) => {\n  //   setTodo((prevTodosState) => {\n  //     return prevTodosState.filter((todo) => todo.text !== todoText);\n  //   });\n  // };\n  return (\n    <div>\n      <NewTodo onAddTodo={onAddTodo}></NewTodo>\n      <Todo removeTodoHandler={removeTodoHandler} todos={todos}></Todo>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AACA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAGA,SAASC,GAAT,GAAe;EACb;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA,oBACE;IAAA,wBACE,QAAC,OAAD;MAAS,SAAS,EAAEC;IAApB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,IAAD;MAAM,iBAAiB,EAAEC,iBAAzB;MAA4C,KAAK,EAAEC;IAAnD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;KAtBQH,G;AAwBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}