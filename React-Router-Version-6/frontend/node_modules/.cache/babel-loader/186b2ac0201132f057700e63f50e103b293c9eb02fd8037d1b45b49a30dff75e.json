{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Course\\\\ReactProjects\\\\React_course_all_projects_exercises\\\\React-Router-Version-6\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport RootLayout from \"./pages/RootLayout\";\nimport Events, { loaderEvents } from \"./pages/EventsPage\";\nimport EventDetails from \"./pages/EventDetailPage\";\nimport NewEvent from \"./pages/NewEventPage\";\nimport EditEvent from \"./pages/EditEventPage\";\nimport EventsLayout from \"./pages/EventsLayoutPage\";\nimport ErrorPage from \"./pages/Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 19\n  }, this),\n  children: [{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }, this)\n  }, {\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(EventsLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 18\n    }, this),\n    children: [{\n      path: \"/events/\",\n      element: /*#__PURE__*/_jsxDEV(Events, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 40\n      }, this),\n      loader: loaderEvents\n    }, {\n      path: \"/events/:eventId\",\n      element: /*#__PURE__*/_jsxDEV(EventDetails, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 48\n      }, this)\n    }, {\n      path: \"/events/event/new\",\n      element: /*#__PURE__*/_jsxDEV(NewEvent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 49\n      }, this)\n    }, {\n      path: \"/events/:eventId/edit\",\n      element: /*#__PURE__*/_jsxDEV(EditEvent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 53\n      }, this)\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","Home","RootLayout","Events","loaderEvents","EventDetails","NewEvent","EditEvent","EventsLayout","ErrorPage","router","path","element","errorElement","children","loader","App"],"sources":["D:/React_Course/ReactProjects/React_course_all_projects_exercises/React-Router-Version-6/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport RootLayout from \"./pages/RootLayout\";\nimport Events, { loaderEvents } from \"./pages/EventsPage\";\nimport EventDetails from \"./pages/EventDetailPage\";\nimport NewEvent from \"./pages/NewEventPage\";\nimport EditEvent from \"./pages/EditEventPage\";\nimport EventsLayout from \"./pages/EventsLayoutPage\";\nimport ErrorPage from \"./pages/Error\";\n\nlet router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <RootLayout />,\n    errorElement: <ErrorPage />,\n    children: [\n      { path: \"/\", element: <Home /> },\n      {\n        path: \"events\",\n        element: <EventsLayout />,\n        children: [\n          { path: \"/events/\", element: <Events />, loader: loaderEvents },\n          { path: \"/events/:eventId\", element: <EventDetails /> },\n          { path: \"/events/event/new\", element: <NewEvent /> },\n          { path: \"/events/:eventId/edit\", element: <EditEvent /> },\n        ],\n      },\n    ],\n  },\n]);\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,MAAM,IAAIC,YAAY,QAAQ,oBAAoB;AACzD,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,YAAY,MAAM,0BAA0B;AACnD,OAAOC,SAAS,MAAM,eAAe;AAAC;AAEtC,IAAIC,MAAM,GAAGX,mBAAmB,CAAC,CAC/B;EACEY,IAAI,EAAE,GAAG;EACTC,OAAO,eAAE,QAAC,UAAU;IAAA;IAAA;IAAA;EAAA,QAAG;EACvBC,YAAY,eAAE,QAAC,SAAS;IAAA;IAAA;IAAA;EAAA,QAAG;EAC3BC,QAAQ,EAAE,CACR;IAAEH,IAAI,EAAE,GAAG;IAAEC,OAAO,eAAE,QAAC,IAAI;MAAA;MAAA;MAAA;IAAA;EAAI,CAAC,EAChC;IACED,IAAI,EAAE,QAAQ;IACdC,OAAO,eAAE,QAAC,YAAY;MAAA;MAAA;MAAA;IAAA,QAAG;IACzBE,QAAQ,EAAE,CACR;MAAEH,IAAI,EAAE,UAAU;MAAEC,OAAO,eAAE,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG;MAAEG,MAAM,EAAEX;IAAa,CAAC,EAC/D;MAAEO,IAAI,EAAE,kBAAkB;MAAEC,OAAO,eAAE,QAAC,YAAY;QAAA;QAAA;QAAA;MAAA;IAAI,CAAC,EACvD;MAAED,IAAI,EAAE,mBAAmB;MAAEC,OAAO,eAAE,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAI,CAAC,EACpD;MAAED,IAAI,EAAE,uBAAuB;MAAEC,OAAO,eAAE,QAAC,SAAS;QAAA;QAAA;QAAA;MAAA;IAAI,CAAC;EAE7D,CAAC;AAEL,CAAC,CACF,CAAC;AAEF,SAASI,GAAG,GAAG;EACb,oBAAO,QAAC,cAAc;IAAC,MAAM,EAAEN;EAAO;IAAA;IAAA;IAAA;EAAA,QAAG;AAC3C;AAAC,KAFQM,GAAG;AAIZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}