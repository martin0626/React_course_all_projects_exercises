{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Course\\\\ReactProjects\\\\React_course_all_projects_exercises\\\\React-Router-Version-6\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport RootLayout from \"./pages/RootLayout\";\nimport Events from \"./pages/EventsPage\";\nimport EventDetails from \"./pages/EventDetailPage\";\nimport NewEvent from \"./pages/NewEventPage\";\nimport EditEventPage from \"./pages/EditEventPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 14\n  }, this),\n  children: [{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }, this)\n  }, {\n    path: \"/events\",\n    element: /*#__PURE__*/_jsxDEV(Events, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 35\n    }, this)\n  }, {\n    path: \"/events/:eventId\",\n    element: /*#__PURE__*/_jsxDEV(EventDetails, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 44\n    }, this)\n  }, {\n    path: \"/events/new\",\n    element: /*#__PURE__*/_jsxDEV(NewEvent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 39\n    }, this)\n  }, {\n    path: \"/events/:eventId/edit\",\n    element: /*#__PURE__*/_jsxDEV(NewEvent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 49\n    }, this)\n  }]\n}]);\n\n// //    - /events/<some-id>/edit => EditEventPage\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","Home","RootLayout","Events","EventDetails","NewEvent","EditEventPage","router","path","element","children","App"],"sources":["D:/React_Course/ReactProjects/React_course_all_projects_exercises/React-Router-Version-6/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport RootLayout from \"./pages/RootLayout\";\nimport Events from \"./pages/EventsPage\";\nimport EventDetails from \"./pages/EventDetailPage\";\nimport NewEvent from \"./pages/NewEventPage\";\nimport EditEventPage from \"./pages/EditEventPage\";\n\nlet router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <RootLayout />,\n    children: [\n      { path: \"/\", element: <Home /> },\n      { path: \"/events\", element: <Events /> },\n      { path: \"/events/:eventId\", element: <EventDetails /> },\n      { path: \"/events/new\", element: <NewEvent /> },\n      { path: \"/events/:eventId/edit\", element: <NewEvent /> },\n    ],\n  },\n]);\n\n// //    - /events/<some-id>/edit => EditEventPage\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,aAAa,MAAM,uBAAuB;AAAC;AAElD,IAAIC,MAAM,GAAGR,mBAAmB,CAAC,CAC/B;EACES,IAAI,EAAE,GAAG;EACTC,OAAO,eAAE,QAAC,UAAU;IAAA;IAAA;IAAA;EAAA,QAAG;EACvBC,QAAQ,EAAE,CACR;IAAEF,IAAI,EAAE,GAAG;IAAEC,OAAO,eAAE,QAAC,IAAI;MAAA;MAAA;MAAA;IAAA;EAAI,CAAC,EAChC;IAAED,IAAI,EAAE,SAAS;IAAEC,OAAO,eAAE,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA;EAAI,CAAC,EACxC;IAAED,IAAI,EAAE,kBAAkB;IAAEC,OAAO,eAAE,QAAC,YAAY;MAAA;MAAA;MAAA;IAAA;EAAI,CAAC,EACvD;IAAED,IAAI,EAAE,aAAa;IAAEC,OAAO,eAAE,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA;EAAI,CAAC,EAC9C;IAAED,IAAI,EAAE,uBAAuB;IAAEC,OAAO,eAAE,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA;EAAI,CAAC;AAE5D,CAAC,CACF,CAAC;;AAEF;;AAEA,SAASE,GAAG,GAAG;EACb,oBAAO,QAAC,cAAc;IAAC,MAAM,EAAEJ;EAAO;IAAA;IAAA;IAAA;EAAA,QAAG;AAC3C;AAAC,KAFQI,GAAG;AAIZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}