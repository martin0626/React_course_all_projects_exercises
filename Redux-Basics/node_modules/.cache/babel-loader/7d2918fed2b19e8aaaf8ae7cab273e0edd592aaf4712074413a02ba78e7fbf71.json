{"ast":null,"code":"import { createStore } from \"redux\";\nimport { configureStore, createSlice } from \"@reduxjs/toolkit\";\nlet authDefaultState = {\n  isLoggedIn: false\n};\nlet authSlice = createSlice({\n  name: \"auth\",\n  initialState: authDefaultState,\n  reducers: {\n    login(state) {\n      state.isLoggedIn = true;\n    },\n    logout(state) {\n      state.isLoggedIn = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\n\n// let counterReducer = (state = counterDefaultState, action) => {\n//   if (action.type === \"Increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"Increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"Decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"Toggle\") {\n//     return {\n//       counter: state.counter,\n//       showCounter: !state.showCounter,\n//     };\n//   }\n//   return state;\n// };\n\n// const store = createStore(counterReducer);\n\nexport default store;","map":{"version":3,"names":["createStore","configureStore","createSlice","authDefaultState","isLoggedIn","authSlice","name","initialState","reducers","login","state","logout","store","reducer","counter","counterSlice","auth","counterActions","actions","authActions"],"sources":["D:/React_Course/ReactProjects/React_course_all_projects_exercises/Redux-Basics/src/store/index.js"],"sourcesContent":["import { createStore } from \"redux\";\r\nimport { configureStore, createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\n\r\nlet authDefaultState = {\r\n  isLoggedIn: false,\r\n};\r\n\r\nlet authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: authDefaultState,\r\n  reducers: {\r\n    login(state) {\r\n      state.isLoggedIn = true;\r\n    },\r\n    logout(state) {\r\n      state.isLoggedIn = false;\r\n    },\r\n  },\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: { counter: counterSlice.reducer, auth: authSlice.reducer },\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport const authActions = authSlice.actions;\r\n\r\n// let counterReducer = (state = counterDefaultState, action) => {\r\n//   if (action.type === \"Increment\") {\r\n//     return {\r\n//       counter: state.counter + 1,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"Increase\") {\r\n//     return {\r\n//       counter: state.counter + action.amount,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"Decrement\") {\r\n//     return {\r\n//       counter: state.counter - 1,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"Toggle\") {\r\n//     return {\r\n//       counter: state.counter,\r\n//       showCounter: !state.showCounter,\r\n//     };\r\n//   }\r\n//   return state;\r\n// };\r\n\r\n// const store = createStore(counterReducer);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAI9D,IAAIC,gBAAgB,GAAG;EACrBC,UAAU,EAAE;AACd,CAAC;AAED,IAAIC,SAAS,GAAGH,WAAW,CAAC;EAC1BI,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEJ,gBAAgB;EAC9BK,QAAQ,EAAE;IACRC,KAAK,CAACC,KAAK,EAAE;MACXA,KAAK,CAACN,UAAU,GAAG,IAAI;IACzB,CAAC;IACDO,MAAM,CAACD,KAAK,EAAE;MACZA,KAAK,CAACN,UAAU,GAAG,KAAK;IAC1B;EACF;AACF,CAAC,CAAC;AAEF,MAAMQ,KAAK,GAAGX,cAAc,CAAC;EAC3BY,OAAO,EAAE;IAAEC,OAAO,EAAEC,YAAY,CAACF,OAAO;IAAEG,IAAI,EAAEX,SAAS,CAACQ;EAAQ;AACpE,CAAC,CAAC;AAEF,OAAO,MAAMI,cAAc,GAAGF,YAAY,CAACG,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGd,SAAS,CAACa,OAAO;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,eAAeN,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}