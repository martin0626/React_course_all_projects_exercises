{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Course\\\\ReactProjects\\\\React_course_all_projects_exercises\\\\React-Router\\\\src\\\\components\\\\comments\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./Comments.module.css\";\nimport CommentsList from \"./CommentsList\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = props => {\n  _s();\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const {\n    sendRequest,\n    error,\n    data: commentsData,\n    status\n  } = useHttp(getAllComments);\n  const quoteId = useParams().quoteId;\n  useEffect(() => {\n    sendRequest(quoteId);\n    console.log(commentsData);\n  }, [sendRequest, quoteId]);\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  let comments;\n  if (status === \"pending\") {\n    comments = /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      className: \"centered\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n  if (status === \"completed\" && commentsData && commentsData.length > 0) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: commentsData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  }\n  if (status === \"completed\" && (!commentsData || comments.length === 0)) {\n    comments = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: \"No comments were added yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.comments,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: startAddCommentHandler,\n        children: \"Add a Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.comments,\n      children: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"UXWXVkILn2ph2NMBdltbbHpmdgk=\", false, function () {\n  return [useHttp, useParams];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["Fragment","useEffect","useState","useParams","useHttp","getAllComments","LoadingSpinner","classes","CommentsList","NewCommentForm","Comments","props","isAddingComment","setIsAddingComment","sendRequest","error","data","commentsData","status","quoteId","console","log","startAddCommentHandler","comments","length"],"sources":["D:/React_Course/ReactProjects/React_course_all_projects_exercises/React-Router/src/components/comments/Comments.js"],"sourcesContent":["import { Fragment, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./Comments.module.css\";\nimport CommentsList from \"./CommentsList\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nconst Comments = (props) => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const {\n    sendRequest,\n    error,\n    data: commentsData,\n    status,\n  } = useHttp(getAllComments);\n  const quoteId = useParams().quoteId;\n\n  useEffect(() => {\n    sendRequest(quoteId);\n    console.log(commentsData);\n  }, [sendRequest, quoteId]);\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = <LoadingSpinner className=\"centered\" />;\n  }\n\n  if (status === \"completed\" && commentsData && commentsData.length > 0) {\n    comments = <CommentsList comments={commentsData} />;\n  }\n  if (status === \"completed\" && (!commentsData || comments.length === 0)) {\n    comments = <p className=\"centered\">No comments were added yet!</p>;\n  }\n  return (\n    <Fragment>\n      <section className={classes.comments}>\n        <h2>User Comments</h2>\n        {!isAddingComment && (\n          <button className=\"btn\" onClick={startAddCommentHandler}>\n            Add a Comment\n          </button>\n        )}\n        {isAddingComment && <NewCommentForm />}\n      </section>\n      <section className={classes.comments}>{comments}</section>\n    </Fragment>\n  );\n};\n\nexport default Comments;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACrD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,cAAc,MAAM,sBAAsB;AAEjD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,cAAc,MAAM,kBAAkB;AAAC;AAE9C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EAC1B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAM;IACJY,WAAW;IACXC,KAAK;IACLC,IAAI,EAAEC,YAAY;IAClBC;EACF,CAAC,GAAGd,OAAO,CAACC,cAAc,CAAC;EAC3B,MAAMc,OAAO,GAAGhB,SAAS,EAAE,CAACgB,OAAO;EAEnClB,SAAS,CAAC,MAAM;IACda,WAAW,CAACK,OAAO,CAAC;IACpBC,OAAO,CAACC,GAAG,CAACJ,YAAY,CAAC;EAC3B,CAAC,EAAE,CAACH,WAAW,EAAEK,OAAO,CAAC,CAAC;EAC1B,MAAMG,sBAAsB,GAAG,MAAM;IACnCT,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,IAAIU,QAAQ;EAEZ,IAAIL,MAAM,KAAK,SAAS,EAAE;IACxBK,QAAQ,gBAAG,QAAC,cAAc;MAAC,SAAS,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG;EACpD;EAEA,IAAIL,MAAM,KAAK,WAAW,IAAID,YAAY,IAAIA,YAAY,CAACO,MAAM,GAAG,CAAC,EAAE;IACrED,QAAQ,gBAAG,QAAC,YAAY;MAAC,QAAQ,EAAEN;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG;EACrD;EACA,IAAIC,MAAM,KAAK,WAAW,KAAK,CAACD,YAAY,IAAIM,QAAQ,CAACC,MAAM,KAAK,CAAC,CAAC,EAAE;IACtED,QAAQ,gBAAG;MAAG,SAAS,EAAC,UAAU;MAAA,UAAC;IAA2B;MAAA;MAAA;MAAA;IAAA,QAAI;EACpE;EACA,oBACE,QAAC,QAAQ;IAAA,wBACP;MAAS,SAAS,EAAEhB,OAAO,CAACgB,QAAS;MAAA,wBACnC;QAAA,UAAI;MAAa;QAAA;QAAA;QAAA;MAAA,QAAK,EACrB,CAACX,eAAe,iBACf;QAAQ,SAAS,EAAC,KAAK;QAAC,OAAO,EAAEU,sBAAuB;QAAA,UAAC;MAEzD;QAAA;QAAA;QAAA;MAAA,QACD,EACAV,eAAe,iBAAI,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9B,eACV;MAAS,SAAS,EAAEL,OAAO,CAACgB,QAAS;MAAA,UAAEA;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAW;EAAA;IAAA;IAAA;IAAA;EAAA,QACjD;AAEf,CAAC;AAAC,GA7CIb,QAAQ;EAAA,QAQRN,OAAO,EACKD,SAAS;AAAA;AAAA,KATrBO,QAAQ;AA+Cd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}