{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Course\\\\ReactProjects\\\\React_course_all_projects_exercises\\\\React-Router\\\\src\\\\pages\\\\AllQuotes.js\";\nimport { useEffect } from \"react\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport { getAllQuotes } from \"../lib/api\";\n// import useHttp from \"../hooks/use-http\";\n// import LoadingSpinner from \"../components/UI/LoadingSpinner\";\n// import NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Martinaa\",\n  text: \"React is Fun\"\n}, {\n  id: \"a2\",\n  author: \"Martincho\",\n  text: \"React is Fun\"\n}, {\n  id: \"q3\",\n  author: \"Martin\",\n  text: \"React is Fun\"\n}];\nconst AllQuotes = async () => {\n  // const {\n  //   sendRequest,\n  //   status,\n  //   data: loadedQuotes,\n  //   error,\n  // } = useHttp(getAllQuotes, true);\n\n  // useEffect(() => {\n  //   sendRequest();\n  // }, [sendRequest]);\n\n  // if (status === \"pending\") {\n  //   return (\n  //     <div className=\"centered\">\n  //       <LoadingSpinner />\n  //     </div>\n  //   );\n  // }\n\n  // if (error) {\n  //   return <p className=\"centered focused\">{error}</p>;\n  // }\n\n  // if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n  //   return <NoQuotesFound />;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: DUMMY_QUOTES\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, this);\n};\n_c = AllQuotes;\nexport default AllQuotes;\nvar _c;\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"names":["useEffect","QuoteList","getAllQuotes","DUMMY_QUOTES","id","author","text","AllQuotes"],"sources":["D:/React_Course/ReactProjects/React_course_all_projects_exercises/React-Router/src/pages/AllQuotes.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\n// import useHttp from \"../hooks/use-http\";\r\n// import LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n// import NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\n\r\nlet DUMMY_QUOTES = [\r\n  {\r\n    id: \"q1\",\r\n    author: \"Martinaa\",\r\n    text: \"React is Fun\",\r\n  },\r\n  {\r\n    id: \"a2\",\r\n    author: \"Martincho\",\r\n    text: \"React is Fun\",\r\n  },\r\n  {\r\n    id: \"q3\",\r\n    author: \"Martin\",\r\n    text: \"React is Fun\",\r\n  },\r\n];\r\n\r\nconst AllQuotes = async () => {\r\n  // const {\r\n  //   sendRequest,\r\n  //   status,\r\n  //   data: loadedQuotes,\r\n  //   error,\r\n  // } = useHttp(getAllQuotes, true);\r\n\r\n  // useEffect(() => {\r\n  //   sendRequest();\r\n  // }, [sendRequest]);\r\n\r\n  // if (status === \"pending\") {\r\n  //   return (\r\n  //     <div className=\"centered\">\r\n  //       <LoadingSpinner />\r\n  //     </div>\r\n  //   );\r\n  // }\r\n\r\n  // if (error) {\r\n  //   return <p className=\"centered focused\">{error}</p>;\r\n  // }\r\n\r\n  // if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n  //   return <NoQuotesFound />;\r\n  // }\r\n\r\n  return <QuoteList quotes={DUMMY_QUOTES}></QuoteList>;\r\n};\r\n\r\nexport default AllQuotes;\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,SAAS,MAAM,gCAAgC;AACtD,SAASC,YAAY,QAAQ,YAAY;AACzC;AACA;AACA;AAAA;AAEA,IAAIC,YAAY,GAAG,CACjB;EACEC,EAAE,EAAE,IAAI;EACRC,MAAM,EAAE,UAAU;EAClBC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,IAAI;EACRC,MAAM,EAAE,WAAW;EACnBC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,IAAI;EACRC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE;AACR,CAAC,CACF;AAED,MAAMC,SAAS,GAAG,YAAY;EAC5B;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,oBAAO,QAAC,SAAS;IAAC,MAAM,EAAEJ;EAAa;IAAA;IAAA;IAAA;EAAA,QAAa;AACtD,CAAC;AAAC,KA7BII,SAAS;AA+Bf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}