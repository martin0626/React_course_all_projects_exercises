{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Course\\\\ReactProjects\\\\React_course_all_projects_exercises\\\\React-Router\\\\src\\\\pages\\\\QuoteDetail.js\",\n  _s = $RefreshSig$();\nimport { Fragment } from \"react\";\nimport { Route, useParams } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Martin\",\n  text: \"React is Fun\"\n}, {\n  id: \"q2\",\n  author: \"Martin\",\n  text: \"Diff Check\"\n}, {\n  id: \"q3\",\n  author: \"Martin\",\n  text: \"React is Fun\"\n}];\nconst QuoteDetail = () => {\n  _s();\n  let quotesId = useParams().quoteId;\n  let quote = DUMMY_QUOTES.find(quote => quote.id === quotesId);\n  if (!quote) {\n    return;\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${quotesId}/comment`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteDetail, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n  return [useParams];\n});\n_c = QuoteDetail;\nexport default QuoteDetail;\nvar _c;\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["Fragment","Route","useParams","Comments","HighlightedQuote","DUMMY_QUOTES","id","author","text","QuoteDetail","quotesId","quoteId","quote","find"],"sources":["D:/React_Course/ReactProjects/React_course_all_projects_exercises/React-Router/src/pages/QuoteDetail.js"],"sourcesContent":["import { Fragment } from \"react\";\r\nimport { Route, useParams } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\n\r\nlet DUMMY_QUOTES = [\r\n  {\r\n    id: \"q1\",\r\n    author: \"Martin\",\r\n    text: \"React is Fun\",\r\n  },\r\n  {\r\n    id: \"q2\",\r\n    author: \"Martin\",\r\n    text: \"Diff Check\",\r\n  },\r\n  {\r\n    id: \"q3\",\r\n    author: \"Martin\",\r\n    text: \"React is Fun\",\r\n  },\r\n];\r\n\r\nconst QuoteDetail = () => {\r\n  let quotesId = useParams().quoteId;\r\n\r\n  let quote = DUMMY_QUOTES.find((quote) => quote.id === quotesId);\r\n\r\n  if (!quote) {\r\n    return;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={quote.text} author={quote.author} />\r\n      <Route path={`/quotes/${quotesId}/comment`}>\r\n        <Comments></Comments>\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,KAAK,EAAEC,SAAS,QAAQ,kBAAkB;AACnD,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,gBAAgB,MAAM,uCAAuC;AAAC;AAErE,IAAIC,YAAY,GAAG,CACjB;EACEC,EAAE,EAAE,IAAI;EACRC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,IAAI;EACRC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,IAAI;EACRC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE;AACR,CAAC,CACF;AAED,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,IAAIC,QAAQ,GAAGR,SAAS,EAAE,CAACS,OAAO;EAElC,IAAIC,KAAK,GAAGP,YAAY,CAACQ,IAAI,CAAED,KAAK,IAAKA,KAAK,CAACN,EAAE,KAAKI,QAAQ,CAAC;EAE/D,IAAI,CAACE,KAAK,EAAE;IACV;EACF;EACA,oBACE,QAAC,QAAQ;IAAA,wBACP,QAAC,gBAAgB;MAAC,IAAI,EAAEA,KAAK,CAACJ,IAAK;MAAC,MAAM,EAAEI,KAAK,CAACL;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eAC5D,QAAC,KAAK;MAAC,IAAI,EAAG,WAAUG,QAAS,UAAU;MAAA,uBACzC,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAY;MAAA;MAAA;MAAA;IAAA,QACf;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEf,CAAC;AAAC,GAhBID,WAAW;EAAA,QACAP,SAAS;AAAA;AAAA,KADpBO,WAAW;AAkBjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}