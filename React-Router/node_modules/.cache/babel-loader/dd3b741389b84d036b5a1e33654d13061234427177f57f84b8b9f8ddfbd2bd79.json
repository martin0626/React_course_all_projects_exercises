{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Course\\\\ReactProjects\\\\React_course_all_projects_exercises\\\\React-Router\\\\src\\\\pages\\\\QuoteDetail.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect } from \"react\";\nimport { Route, useParams } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuoteDetail = () => {\n  _s();\n  let quotesId = useParams().quoteId;\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n  if (!data) {\n    return;\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: data.text,\n      author: data.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${quotesId}/comment`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteDetail, \"a1ZG0AhaKq3MQq5VGQzIBu0bODQ=\", false, function () {\n  return [useParams, useHttp];\n});\n_c = QuoteDetail;\nexport default QuoteDetail;\nvar _c;\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["Fragment","useEffect","Route","useParams","Comments","HighlightedQuote","useHttp","getSingleQuote","QuoteDetail","quotesId","quoteId","sendRequest","status","data","loadedQuote","error","text","author"],"sources":["D:/React_Course/ReactProjects/React_course_all_projects_exercises/React-Router/src/pages/QuoteDetail.js"],"sourcesContent":["import { Fragment, useEffect } from \"react\";\r\nimport { Route, useParams } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\n\r\nconst QuoteDetail = () => {\r\n  let quotesId = useParams().quoteId;\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuote,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n  if (!data) {\r\n    return;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={data.text} author={data.author} />\r\n      <Route path={`/quotes/${quotesId}/comment`}>\r\n        <Comments></Comments>\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,KAAK,EAAEC,SAAS,QAAQ,kBAAkB;AACnD,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,gBAAgB,MAAM,uCAAuC;AACpE,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,cAAc,QAAQ,YAAY;AAAC;AAE5C,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,IAAIC,QAAQ,GAAGN,SAAS,EAAE,CAACO,OAAO;EAClC,MAAM;IACJC,WAAW;IACXC,MAAM;IACNC,IAAI,EAAEC,WAAW;IACjBC;EACF,CAAC,GAAGT,OAAO,CAACC,cAAc,EAAE,IAAI,CAAC;EAEjCN,SAAS,CAAC,MAAM;IACdU,WAAW,CAACD,OAAO,CAAC;EACtB,CAAC,EAAE,CAACC,WAAW,EAAED,OAAO,CAAC,CAAC;EAC1B,IAAI,CAACG,IAAI,EAAE;IACT;EACF;EACA,oBACE,QAAC,QAAQ;IAAA,wBACP,QAAC,gBAAgB;MAAC,IAAI,EAAEA,IAAI,CAACG,IAAK;MAAC,MAAM,EAAEH,IAAI,CAACI;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eAC1D,QAAC,KAAK;MAAC,IAAI,EAAG,WAAUR,QAAS,UAAU;MAAA,uBACzC,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAY;MAAA;MAAA;MAAA;IAAA,QACf;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEf,CAAC;AAAC,GAvBID,WAAW;EAAA,QACAL,SAAS,EAMpBG,OAAO;AAAA;AAAA,KAPPE,WAAW;AAyBjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}