{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Course\\\\ReactProjects\\\\React_course_all_projects_exercises\\\\React-Router\\\\src\\\\components\\\\comments\\\\NewCommentForm.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./NewCommentForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewCommentForm = props => {\n  _s();\n  const commentTextRef = useRef();\n  let quoteId = useParams().quoteId;\n  const {\n    sendRequest,\n    data: commentText,\n    error,\n    status\n  } = useHttp(addComment, true);\n  const submitFormHandler = event => {\n    event.preventDefault();\n    sendRequest({\n      quoteId: quoteId,\n      commentData: {\n        text: commentTextRef.current.value\n      }\n    });\n    // optional: Could validate here\n  };\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      props.onAddedComment();\n    }\n  }, [status, error, props.onAddedComment]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: submitFormHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        onSubmit: submitFormHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"comment\",\n          children: \"Your Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"comment\",\n          rows: \"5\",\n          ref: commentTextRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(NewCommentForm, \"nij57Q8nywpFBOR3n/BOWIvEsK8=\", false, function () {\n  return [useParams, useHttp];\n});\n_c = NewCommentForm;\nexport default NewCommentForm;\nvar _c;\n$RefreshReg$(_c, \"NewCommentForm\");","map":{"version":3,"names":["Fragment","useEffect","useRef","useParams","useHttp","addComment","LoadingSpinner","classes","NewCommentForm","props","commentTextRef","quoteId","sendRequest","data","commentText","error","status","submitFormHandler","event","preventDefault","commentData","text","current","value","onAddedComment","form","control","actions"],"sources":["D:/React_Course/ReactProjects/React_course_all_projects_exercises/React-Router/src/components/comments/NewCommentForm.js"],"sourcesContent":["import { Fragment, useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  let quoteId = useParams().quoteId;\n  const {\n    sendRequest,\n    data: commentText,\n    error,\n    status,\n  } = useHttp(addComment, true);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    sendRequest({\n      quoteId: quoteId,\n      commentData: { text: commentTextRef.current.value },\n    });\n    // optional: Could validate here\n  };\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      props.onAddedComment();\n    }\n  }, [status, error, props.onAddedComment]);\n  return (\n    <Fragment>\n      <form className={classes.form} onSubmit={submitFormHandler}>\n        <div className={classes.control} onSubmit={submitFormHandler}>\n          <label htmlFor=\"comment\">Your Comment</label>\n          <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button className=\"btn\">Add Comment</button>\n        </div>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default NewCommentForm;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,UAAU,QAAQ,eAAe;AAC1C,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,OAAO,MAAM,6BAA6B;AAAC;AAElD,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAAA;EAChC,MAAMC,cAAc,GAAGR,MAAM,EAAE;EAC/B,IAAIS,OAAO,GAAGR,SAAS,EAAE,CAACQ,OAAO;EACjC,MAAM;IACJC,WAAW;IACXC,IAAI,EAAEC,WAAW;IACjBC,KAAK;IACLC;EACF,CAAC,GAAGZ,OAAO,CAACC,UAAU,EAAE,IAAI,CAAC;EAE7B,MAAMY,iBAAiB,GAAIC,KAAK,IAAK;IACnCA,KAAK,CAACC,cAAc,EAAE;IACtBP,WAAW,CAAC;MACVD,OAAO,EAAEA,OAAO;MAChBS,WAAW,EAAE;QAAEC,IAAI,EAAEX,cAAc,CAACY,OAAO,CAACC;MAAM;IACpD,CAAC,CAAC;IACF;EACF,CAAC;;EAEDtB,SAAS,CAAC,MAAM;IACd,IAAIe,MAAM,KAAK,WAAW,IAAI,CAACD,KAAK,EAAE;MACpCN,KAAK,CAACe,cAAc,EAAE;IACxB;EACF,CAAC,EAAE,CAACR,MAAM,EAAED,KAAK,EAAEN,KAAK,CAACe,cAAc,CAAC,CAAC;EACzC,oBACE,QAAC,QAAQ;IAAA,uBACP;MAAM,SAAS,EAAEjB,OAAO,CAACkB,IAAK;MAAC,QAAQ,EAAER,iBAAkB;MAAA,wBACzD;QAAK,SAAS,EAAEV,OAAO,CAACmB,OAAQ;QAAC,QAAQ,EAAET,iBAAkB;QAAA,wBAC3D;UAAO,OAAO,EAAC,SAAS;UAAA,UAAC;QAAY;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC7C;UAAU,EAAE,EAAC,SAAS;UAAC,IAAI,EAAC,GAAG;UAAC,GAAG,EAAEP;QAAe;UAAA;UAAA;UAAA;QAAA,QAAY;MAAA;QAAA;QAAA;QAAA;MAAA,QAC5D,eACN;QAAK,SAAS,EAAEH,OAAO,CAACoB,OAAQ;QAAA,uBAC9B;UAAQ,SAAS,EAAC,KAAK;UAAA,UAAC;QAAW;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QACxC;IAAA;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACE;AAEf,CAAC;AAAC,GArCInB,cAAc;EAAA,QAEJL,SAAS,EAMnBC,OAAO;AAAA;AAAA,KARPI,cAAc;AAuCpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}